# This template is tested working well in minishift @2020.03.07

apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: app-all-template
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: app
    name: app
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: app
      deploymentconfig: app
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: app
          deploymentconfig: app
      spec:
        containers:
        - env:
          - name: RABBITMQ_HOSTNAME
            value: rabbitmq.test.svc.cluster.local
          - name: REDIS_HOST
            value: redis.test.svc.cluster.local
          image: app
          imagePullPolicy: Always
          name: app
          ports:
          - containerPort: 5000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - app
        from:
          kind: ImageStreamTag
          name: app:latest
          namespace: test
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0

- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: app
    name: app
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: app:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: microservices/app
      git:
        uri: https://github.com/thinkall/ms-nameko-test.git
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: DockerImage
          name: orangelabschina/oex-recsys:nameko
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers: 
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0

- apiVersion: v1
  kind: ImageStream
  metadata: 
    labels:
      app: app
    name: app
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: app:latest
      generation: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
  status:
    dockerImageRepository: ""

- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: app
    name: app
  spec:
    host: app-test.192.168.99.106.nip.io
    port:
      targetPort: 5000-tcp
    to:
      kind: Service
      name: app
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2020-03-07T05:18:46Z
        status: "True"
        type: Admitted
      host: app-test.192.168.99.106.nip.io
      routerName: router
      wildcardPolicy: None

- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2020-03-07 05:17:39 +0000 UTC
      openshift.io/deployer-pod.created-at: 2020-03-07 05:17:32 +0000 UTC
      openshift.io/deployer-pod.name: app-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: app
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"apps.openshift.io/v1","metadata":{"name":"app","namespace":"test","selfLink":"/apis/apps.openshift.io/v1/namespaces/test/deploymentconfigs/app","uid":"54670634-602c-11ea-8081-0800279d113d","resourceVersion":"1941512","generation":2,"creationTimestamp":"2020-03-07T04:30:09Z","labels":{"app":"app"},"annotations":{"openshift.io/generated-by":"OpenShiftNewApp"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ConfigChange"},{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["app"],"from":{"kind":"ImageStreamTag","namespace":"test","name":"app:latest"},"lastTriggeredImage":"app"}}],"replicas":1,"revisionHistoryLimit":10,"test":false,"selector":{"app":"app","deploymentconfig":"app"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"app","deploymentconfig":"app"},"annotations":{"openshift.io/generated-by":"OpenShiftNewApp"}},"spec":{"containers":[{"name":"app","image":"app","ports":[{"containerPort":5000,"protocol":"TCP"}],"env":[{"name":"RABBITMQ_HOSTNAME","value":"rabbitmq.test.svc.cluster.local"},{"name":"REDIS_HOST","value":"redis.test.svc.cluster.local"}],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":1,"observedGeneration":1,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2020-03-07T04:30:10Z","lastTransitionTime":"2020-03-07T04:30:10Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: app
      openshift.io/deployment-config.name: app
    name: app-1
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: app
      uid: 54670634-602c-11ea-8081-0800279d113d
  spec:
    replicas: 1
    selector:
      app: app
      deployment: app-1
      deploymentconfig: app
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: app
          openshift.io/deployment.name: app-1
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: app
          deployment: app-1
          deploymentconfig: app
      spec:
        containers:
        - env:
          - name: RABBITMQ_HOSTNAME
            value: rabbitmq.test.svc.cluster.local
          - name: REDIS_HOST
            value: redis.test.svc.cluster.local
          image: app
          imagePullPolicy: Always
          name: app
          ports:
          - containerPort: 5000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
    
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: app
    name: app
  spec:
    ports:
    - name: 5000-tcp
      port: 5000
      protocol: TCP
      targetPort: 5000
    selector:
      app: app
      deploymentconfig: app
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
